<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
     	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">

		<!--加入springsecurity-->
<!--    	<import resource="springsecurity.xml"/>-->
	    <!-- shiro配置 -->
<!-- 	    <import resource="classpath:/applicationContext-shiro.xml" /> -->
    	
    	
		<!--打开annotation注释 -->
    	<context:annotation-config/>
		<!--配置要扫描的包 -->
		<context:component-scan base-package="*"/>
<!--    	<context:component-scan base-package="com.sdhsie.*" />-->
    	<!--proxy-target-class="true"强制使用cglib代理   如果为false则spring会自动选择-->
    	<aop:aspectj-autoproxy proxy-target-class="true" />
		<!--加载数据库配置文件 -->
    	<context:property-placeholder location="classpath:jdbc.properties"/>
    	
    	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    	    <property name="driverClassName" value="${jdbc.driverClassName}"/>
    	    <property name="url" value="${jdbc.url}"/>
    	    <property name="username" value="${jdbc.username}"/>
    	    <property name="password" value="${jdbc.password}"/>
    	    <!-- 队列中的最小等待数 -->
			<property name="minIdle" value="${jdbc.minIdle}"></property>
			<!-- 队列中的最大等待数 -->
			<property name="maxIdle" value="${jdbc.maxIdle}"></property>
			<!-- 最长等待时间，单位毫秒 -->
			<property name="maxWait" value="${jdbc.maxWait}"></property>
			<!-- 最大活跃数 -->
			<property name="maxActive" value="${jdbc.maxActive}"></property>
			<property name="initialSize" value="${jdbc.initialSize}"></property>
    	</bean>
    	
    	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	    <property name="dataSource" ref="dataSource"/>
    	    <property name="configLocation" value="classpath:mybatis.xml"/>
    	</bean>
    	
    	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
    	    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    	</bean>
    	
    	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	    <property name="dataSource" ref="dataSource"/>
    	</bean>
    	
		<!--使用annotation注解管理事物 -->
    	<tx:annotation-driven transaction-manager="transactionManager"/>
    	
    	
<!--    	<bean id="timingJob" class="com.sdhsie.web.system.controller.BarometerController" />-->
<!--    	 配置一个Job,方法 -->
<!--	     <bean id="jobBean" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
<!--	         <property name="targetObject">-->
<!--	          <ref bean="timingJob"/>-->
<!--	         </property>-->
<!--	         <property name="targetMethod">-->
<!--	          <value>formTask</value>-->
<!--	         </property>-->
<!--	    </bean>-->
<!--    	<bean id="complexTimingJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">-->
<!--	        <property name="jobDetail">-->
<!--	            <ref bean="jobBean" />-->
<!--	        </property>-->
<!--	        <property name="cronExpression">-->
<!--	            每天中午12点触发-->
<!--	            <value>0 0 12 * * ?</value>-->
<!--	        </property>-->
<!--    	</bean>-->
<!--	    	 Spring触发工厂 -->
<!--	    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
<!--	        <property name="triggers">-->
<!--	            <list>-->
<!--	                <ref bean="complexTimingJobTrigger" />-->
<!--	            </list>-->
<!--	        </property>-->
<!--	    </bean>-->
	    
</beans>	